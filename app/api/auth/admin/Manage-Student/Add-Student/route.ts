import { NextResponse } from "next/server";
import prisma from "@/app/lib/client";
export async function POST(request: Request) {
  try {
    const body = await request.json();

    // Validate required fields
    const { FirstName, LastName, Password, Year, StudentId, Email, Collage } =
      body;

    if (
      !FirstName ||
      !LastName ||
      !Password ||
      !Year ||
      !StudentId ||
      !Email ||
      !Collage
    ) {
      return NextResponse.json(
        { message: "All required fields must be provided." },
        { status: 400 }
      );
    }

    // Check if the student ID or email already exists
    const existingStudent = await prisma.user.findFirst({
      where: { OR: [{ StudentId }, { Email }] },
    });

    if (existingStudent) {
      return NextResponse.json(
        { message: "Student ID or Email already exists." },
        { status: 409 }
      );
    }

    // Create the new student
    const newStudent = await prisma.user.create({
      data: {
        Id: undefined, // Automatically generated by Prisma
        FirstName,
        LastName,
        Password, // In production, hash the password before saving
        PhoneNumber: body.PhoneNumber || null,
        Year,
        StudentId,
        Email,
        Collage,
        Department: body.Department || null,
        Program: body.Program || null,
        FailedLoginAttempts: 0,
        IsLocked: false,
      },
    });

    return NextResponse.json({ message: "Student created successfully." }, { status: 201 });
  } catch (error) {
    console.error("Error creating student:", error);
    return NextResponse.json(
      { message: "Internal server error." },
      { status: 500 }
    );
  }
}